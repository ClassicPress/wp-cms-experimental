name: PHPUnit Tests

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

env:
  PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: ${{ true }}
  LOCAL_PHP_MEMCACHED: ${{ false }}
  SLOW_TESTS: 'external-http,media,restapi'

jobs:
  # Runs the PHPUnit tests for WordPress.
  #
  # Performs the following steps:
  # - Sets environment variables.
  # - Checks out the repository.
  # - Sets up Node.js.
  # - Sets up PHP.
  # - Installs Composer dependencies.
  # - Installs npm dependencies
  # - Logs general debug information about the runner.
  # - Logs Docker debug information (about the Docker installation within the runner).
  # - Starts the WordPress Docker container.
  # - Logs the running Docker containers.
  # - Logs debug information about what's installed within the WordPress Docker containers.
  # - Install WordPress within the Docker container.
  # - Run the PHPUnit tests.
  # - Ensures version-controlled files are not modified or deleted.
  test-php:
    name: ${{ matrix.php }}${{ matrix.multisite && ' multisite' || '' }}${{ matrix.split_slow && ' slow tests' || '' }}${{ matrix.memcached && ' with memcached' || '' }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        php: [ '7.4', '8.0', '8.1', '8.2' ]
        os: [ ubuntu-latest ]
        memcached: [ false ]
        split_slow: [ false ]
        multisite: [ false, true ]
        include:
          # Include jobs for PHP 7.4 with memcached.
          - php: '7.4'
            os: ubuntu-latest
            memcached: true
            multisite: false
          - php: '7.4'
            os: ubuntu-latest
            memcached: true
            multisite: true
          # Report the results of the PHP 7.4 without memcached job.
          - php: '7.4'
            os: ubuntu-latest
            memcached: false
            multisite: false
            report: true

    env:
      LOCAL_PHP: ${{ matrix.php }}-fpm
      LOCAL_PHP_MEMCACHED: ${{ matrix.memcached }}
      PHPUNIT_CONFIG: ${{ matrix.multisite && 'tests/phpunit/multisite.xml' || 'phpunit.xml.dist' }}

    steps:
      - name: Configure environment variables
        run: |
          echo "PHP_FPM_UID=$(id -u)" >> $GITHUB_ENV
          echo "PHP_FPM_GID=$(id -g)" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Set up Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: '.nvmrc'
          cache: npm

      ##
      # This allows Composer dependencies to be installed using a single step.
      #
      # Since the tests are currently run within the Docker containers where the PHP version varies,
      # the same PHP version needs to be configured for the action runner machine so that the correct
      # dependency versions are installed and cached.
      ##
      - name: Set up PHP
        uses: shivammathur/setup-php@8e2ac35f639d3e794c1da1f28999385ab6fdf0fc # v2.23.0
        with:
          php-version: '${{ matrix.php }}'
          coverage: none

      # Since Composer dependencies are installed using `composer update` and no lock file is in version control,
      # passing a custom cache suffix ensures that the cache is flushed at least once per week.
      - name: Install Composer dependencies
        uses: ramsey/composer-install@83af392bf5f031813d25e6fe4cd626cdba9a2df6 # v2.2.0
        with:
          custom-cache-suffix: $(/bin/date -u --date='last Mon' "+%F")

      - name: Install npm dependencies
        run: npm ci

      - name: General debug information
        run: |
          npm --version
          node --version
          curl --version
          git --version
          svn --version
          composer --version
          locale -a

      - name: Docker debug information
        run: |
          docker -v
          docker-compose -v

      - name: Start Docker environment
        run: |
          npm run env:start

      - name: Log running Docker containers
        run: docker ps -a

      - name: WordPress Docker container debug information
        run: |
          docker-compose run --rm mysql mysql --version
          docker-compose run --rm php php --version
          docker-compose run --rm php php -m
          docker-compose run --rm php php -i
          docker-compose run --rm php locale -a

      - name: Install WordPress
        run: npm run env:install

      - name: Run slow PHPUnit tests
        if: ${{ matrix.split_slow }}
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c ${{ env.PHPUNIT_CONFIG }} --group ${{ env.SLOW_TESTS }}

      - name: Run PHPUnit tests for single site excluding slow tests
        if: ${{ matrix.php < '7.0' && ! matrix.split_slow && ! matrix.multisite }}
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c ${{ env.PHPUNIT_CONFIG }} --exclude-group ${{ env.SLOW_TESTS }},ajax,ms-files,ms-required

      - name: Run PHPUnit tests for Multisite excluding slow tests
        if: ${{ matrix.php < '7.0' && ! matrix.split_slow && matrix.multisite }}
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c ${{ env.PHPUNIT_CONFIG }} --exclude-group ${{ env.SLOW_TESTS }},ajax,ms-files,ms-excluded,oembed-headers

      - name: Run PHPUnit tests
        if: ${{ matrix.php >= '7.0' }}
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c ${{ env.PHPUNIT_CONFIG }}

      - name: Run AJAX tests
        if: ${{ ! matrix.split_slow }}
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c ${{ env.PHPUNIT_CONFIG }} --group ajax

      - name: Run ms-files tests as a multisite install
        if: ${{ matrix.multisite && ! matrix.split_slow }}
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c tests/phpunit/multisite.xml --group ms-files

      - name: Run external HTTP tests
        if: ${{ ! matrix.multisite && ! matrix.split_slow }}
        run: node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit --verbose -c phpunit.xml.dist --group external-http

      # __fakegroup__ is excluded to force PHPUnit to ignore the <exclude> settings in phpunit.xml.dist.
      - name: Run (Xdebug) tests
        if: ${{ ! matrix.split_slow }}
        run: LOCAL_PHP_XDEBUG=true node ./tools/local-env/scripts/docker.js run php ./vendor/bin/phpunit -v --group xdebug --exclude-group __fakegroup__

      - name: Ensure version-controlled files are not modified or deleted
        run: git diff --exit-code
